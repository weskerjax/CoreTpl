
@{
	ViewBag.Title = "角色列表";
	string tableListId = "RoleList";

	Dictionary<string, string> actItems = OrionUtils.EnumToDictionary<ACT>();

	Pagination<RoleDomain> pagination = ViewBag.Pagination;
	IHtmlHelper<RoleDomain> pageHtml = Html.PropertyHelper(pagination);
	
}

@section Styles {
}


@section Scripts {
}


<div class="page-header" ext-horizontal-fix="">
	<h1>@ViewBag.Title</h1>
</div>


@using (Html.BeginForm(null, null, FormMethod.Get, new { id = "SearchForm", @class = "well btn-toolbar", ext_horizontal_fix = "" }))
{
	<div class="toolbar-left">
		<a class="btn btn-success btn-sm" href="@Url.Action("Create")"><i class="fa fa-plus fa-lg"></i> 新增</a> 
	</div>

	<div class="toolbar-left">
		@(Html.WhereBuilder(pagination)			
			.Column(x => x.RoleId)
			.Column(x => x.RoleName)
			.Column(x => x.RemarkText)
			.Column(x => x.UseStatus)
			.Column(x => x.CreateBy)
			.Column(x => x.CreateDate)
			.Column(x => x.ModifyBy)
			.Column(x => x.ModifyDate)
		)
	</div>

	<div class="toolbar-left">
		<button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-search fa-lg"></i> 搜尋</button>
		<a class="btn btn-default btn-sm hidden-xs hidden-sm" href="?Export=true&@Context.Request.QueryString" target="_blank">
			<i class="fa fa-file-excel-o fa-lg"></i> 匯出
		</a>
	</div>

    <div class="toolbar-left hidden-xs hidden-sm">		
        @await Html.OrderableBtn(tableListId)
        @await Html.SortBuilderBtn(tableListId)
    </div>


	@await Html.PageSizeChange(pagination)
}



<div id="@tableListId">
	<table class="table table-striped table-bordered table-condensed table-nowrap table-hover">
		<thead ext-table-fix="">
			<tr class="head">
				<th class="min"></th>
				<th class="RoleName min">@pageHtml.PagerSortFor(x => x.RoleName)</th>
				<th class="AllowActList">@pageHtml.DisplayNameFor(x => x.AllowActList)</th>
				<th class="UserIds">@pageHtml.DisplayNameFor(x => x.UserIds)</th>
				<th class="Status min">@pageHtml.PagerSortFor(x => x.UseStatus)</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var row in pagination.List)
			{
				<tr>
					<td class="">
						@{ string editUrl = Url.Action("Edit", new { row.RoleId }); }
						<a class="btn btn-warning btn-xs btn-icon" href="@editUrl"><i class="fa fa-pencil fa-lg"></i></a> 
					</td>
					<td class="RoleName">@row.RoleName</td>
					<td class="AllowActList mark-tag">@Html.ShowItem(row.AllowActList, actItems)</td>
					<td class="UserIds mark-tag">@Html.ShowItem(row.UserIds, Items.UserName)</td>
					<td class="Status mark-label">@Html.ShowItem(row.UseStatus)</td>
				</tr>
			}
		</tbody>
	</table>

	@await Html.PageEmptyAlert(pagination)
</div>


<div class="text-center" ext-horizontal-fix="">
	<ul class="pagination pagination-sm">@Html.PagerLinks(pagination)</ul>
</div>





@section Export {
	@if (ViewBag.IsExport != true) { return; }

	@(Html.ExcelExport(pagination.List)
		.ColumnOrder(tableListId)
		.Column(row => row.RoleName)
		.Column(row => Html.ShowItem(row.AllowActList, actItems))
		.Column(row => Html.ShowItem(row.UserIds, Items.UserName))
		.Column(row => Html.ShowItem(row.UseStatus))
	)
}
