@{
    ViewBag.Title = "Table Size Info";
    string tableListId = "TableInfoList";

    List<TableInfo> tableInfoList = ViewBag.TableInfoList ?? new List<TableInfo>();
    IHtmlHelper<TableInfo> listHtml = Html.PropertyHelper(tableInfoList);


	Func<long, object> showKb = @<span title="@item">@((item / 1024).Comma()) KB</span>;
}


<div class="page-header" ext-horizontal-fix="">
	<h1>@ViewBag.Title</h1>
</div>


<div id="@tableListId">
	<table class="table table-striped table-bordered table-condensed table-nowrap table-hover">
		<thead ext-table-fix="">
			<tr class="head">
				<th class="Schema min">@listHtml.PagerSortFor(x => x.Schema)</th>
				<th class="Name min">@listHtml.PagerSortFor(x => x.Name)</th>
				<th class="TotalRows min">@listHtml.PagerSortFor(x => x.TotalRows)</th>
				<th class="TotalBytes min">@listHtml.PagerSortFor(x => x.TotalBytes)</th>
				<th class="TableBytes min">@listHtml.PagerSortFor(x => x.TableBytes)</th>
				<th class="IndexBytes min">@listHtml.PagerSortFor(x => x.IndexBytes)</th>
				<th class="ToastBytes min">@listHtml.PagerSortFor(x => x.ToastBytes)</th>
				<th class=""></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var row in tableInfoList)
			{
				<tr>
					<td class="Schema left">@row.Schema</td>
					<td class="Name left">@row.Name</td>
					<td class="TotalRows right">@row.TotalRows.Comma()</td>					
					<td class="TotalBytes right">@showKb(row.TotalBytes)</td>
					<td class="TableBytes right">@showKb(row.TableBytes)</td>
					<td class="IndexBytes right">@showKb(row.IndexBytes)</td>
					<td class="ToastBytes right">@showKb(row.ToastBytes)</td>
				</tr>
			}
		</tbody>
	</table>
</div>
 